"use strict";$.fn.mirandajs=function(n,t){function e(n,t){var o="",f=n,s;if(t!=""&&(f=eval("JSON."+t)),$.isArray(f))for(s in f)o+=h(f[s]);else o+=h(f);r.html(o);i.delay==0?eval("HTML_OBJ."+i.effect+"()"):eval("HTML_OBJ."+i.effect+'("'+i.delay+'")');u+1<l&&(u++,r=$("#"+i.containers[u]),c=r.html(),setTimeout(function(){e(n,i.jsonNode[u])},i.nodeDelay))}function h(n){var t=c;return keys=$.map(n,function(n,i){t=t.split("[["+i+"]]").join(n)}),t}var s=$.fn.mirandajs.cache=$.fn.mirandajs.cache||{},f=this.attr("id"),i=$.extend({jsonNode:[""],containers:[f],effect:"show",delay:5e3,ajaxMethod:"GET",postData:{},noCache:!1},t),r,o;if(!$.isArray(i.jsonNode)){alert('ERRO: jsonNode needs to be a array. Ex: ["'+i.jsonNode+'"]');return}if(i.jsonNode.length!=i.containers.length){alert("ERRO: The length of jsonNode and containers must be equal.");return}r=$("#"+f);s[f]||(r.children().show(),s[f]=r.html());r.empty();var c=s[f],u=0,l=i.jsonNode.length;typeof n=="string"?(i.noCache&&(o="?",n.indexOf(o)!=-1&&(o="&"),n+=o+"nocache="+$.now()),i.ajaxMethod.toUpperCase()=="GET"?$.get(n,function(n){e(n,i.jsonNode[u])}):$.post(n,i.postData,function(t){n=t;e(n,i.jsonNode[u])},"json")):e(n,i.jsonNode[u])};